<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <title>Calendario</title>
  <link rel="icon" href="/img/favicon.ico" type="image/x-icon">
  <!-- bootstrap -->
  <link rel="stylesheet" href="/css/bootstrap-icons.css">
  <!-- custom -->
  <link rel="stylesheet" href="/css/estilos.min.css">
  <link rel="stylesheet" href="/css/navbar.css">
  <link rel='stylesheet' href='/css/js-year-calendar.min.css'>
</head>

<body class="antialiased">
  <div class="wrapper">
    <%- include('../../partials/header') %>
      <%- include('../../partials/navbar', {opcion: 'CALENDARIO' }) %>
        <div class="page-wrapper">
          <div class="page-body">
            <div class="container-xl">
              <div class="row">
                <div class="col-12">
                  <div class="card mt-1">
                    <% if(typeof alerts !='undefined' ) { %>
                      <% alerts.map(function (alert){ %>
                        <div class="alert alert-warning alert-dismissible fade show" role="alert">
                          <%- alert.msg %>
                        </div>
                        <% }) %>
                          <% } %>
                            <form action="/admin/calendarios/calendario" method="POST">
                              <input type="hidden" name="idusua" id="idusua" value="">
                              <input type="hidden" name="tipest" id="tipest" value="">
                              <div class="card-header">
                                <h3 class="card-title">Calendario</h3>
                              </div>
                              <div class="card-body">
                                <div class="row">
                                  <div class="col-2">
                                    <div class="mb-1">
                                      <div class="form-label">AÃ±o</div>
                                      <select class="form-select" id="cboyea" value="">
                                        <option value="<%- new Date().getFullYear() %>">
                                          <%- new Date().getFullYear() %>
                                        </option>
                                        <option value="<%- new Date().getFullYear() +1 %>">
                                          <%- new Date().getFullYear() +1 %>
                                        </option>
                                      </select>
                                    </div>
                                  </div>
                                  <div class="col-3">
                                    <div class="mb-1">
                                      <div class="form-label">Oficina</div>
                                      <select class="form-select" id="cboofi" name="ofiusu" value="">
                                        <% datos.oficinas.map(element=> { %>
                                          <option value="<%- element.IDOFIC %>" <%- element.IDOFIC===user.oficina
                                            ? "selected" :"" %>>
                                            <%- element.DESOFI %>
                                          </option>
                                          <% }) %>
                                      </select>
                                    </div>
                                  </div>
                                  <div class="col-4">
                                    <div class="mb-1">
                                      <div class="form-label">Usuario</div>
                                      <select class="form-select" id="cbousu" value="">
                                      </select>
                                    </div>
                                  </div>
                                  <div class="col-3">
                                    <div class="mb-1">
                                      <div class="form-label">Estado</div>
                                      <select class="form-select" id="cboest" value="">
                                        <% datos.arrTiposEstado.map(element=> { %>
                                          <option value="<%- element.ID %>">
                                            <%- element.DES %>
                                          </option>
                                          <% }) %>
                                      </select>
                                    </div>
                                  </div>
                                </div>
                                <div id="calendar"></div>
                              </div>
                              <!-- <div class="card-footer text-end">
                    <div class="d-flex">
                      <button type="submit" class="btn btn-primary ms-auto" id="btnVer">Ver calendario</button>
                    </div>
                  </div> -->
                            </form>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <%- include('../../partials/footer') %>
  </div>

  <script src="/js/ayuda.min.js"></script>
  <script src="/js/js-year-calendar.min.js"></script>
  <script src="/js/js-year-calendar.es.js"></script>
  <script>
    const orgList = <% - JSON.stringify(datos.usuarios) %>
    const oficinaUsuario = <% - user.oficina %>
      let currentYear = new Date().getFullYear()
    let params = {
      usuest: 0,
      tipest: 0,
      desde: new Date(currentYear, 0, 1).toLocaleDateString(undefined, { year: 'numeric', month: '2-digit', day: '2-digit' }),
      hasta: new Date(currentYear, 11, 31).toLocaleDateString(undefined, { year: 'numeric', month: '2-digit', day: '2-digit' }),
    }
    let calendario

    document.getElementById('cboyea').addEventListener('change', function () {
      currentYear = this.value
      const desde = new Date(currentYear, 0, 1)
      const hasta = new Date(currentYear, 11, 31)
      params.desde = new Date(currentYear, 0, 1).toLocaleDateString(undefined, { year: 'numeric', month: '2-digit', day: '2-digit' }),
        params.hasta = new Date(currentYear, 11, 31).toLocaleDateString(undefined, { year: 'numeric', month: '2-digit', day: '2-digit' }),


        calendario.setYear(currentYear)
      calendario.setMinDate(desde)
      calendario.setMaxDate(hasta)

      getEstados()
    });
    document.getElementById('cboofi').addEventListener('change', function () {
      arrayFilter(this.value)
    });
    document.getElementById('cbousu').addEventListener('change', function () {
      document.getElementById('idusua').value = this.value
      params.usuest = this.value

      getEstados()
    });
    document.getElementById('cboest').addEventListener('change', function () {
      document.getElementById('tipest').value = this.value
      params.tipest = this.value

      getEstados()
    });
    document.querySelector('#calendar').addEventListener('clickDay', function (e) {
      let dataSource = calendario.getDataSource();

      if (e.element.style.boxShadow) {
        e.element.style.boxShadow = null
      } else {
        e.element.style.boxShadow = 'rgb(13,128,4) 0px -4px 0px 0px inset'
      }

      if (e.events.length) {
        dataSource = dataSource.filter(itm => itm.startDate.getTime() !== e.date.getTime())
        //calendario.setDataSource(dataSource.filter(itm => itm.startDate.getTime() !== e.date.getTime()))
      } else {
        const evento = {
          idesta: 0,
          usuest: params.usuest,
          tipest: params.tipest,
          startDate: e.date,
          endDate: e.date,
          color: '#0D8004'
        }

        dataSource.push(evento)
        //calendario.setDataSource(dataSource)
      }
    })

    const arrayFilter = (oficina) => {
      const trimmedData = orgList.filter(itm => itm.OFIUSU === parseInt(oficina))
      const myLista = trimmedData
      const cbo = document.getElementById('cbousu')
      cbo.innerHTML = "";

      myLista.map(itm => {
        const option = document.createElement('option')
        option.value = itm.IDUSUA
        option.text = itm.NOMUSU

        if (itm.IDUSUA === <% - user.id %>) {
          option.selected = true
        }

        cbo.appendChild(option)
      })
      params.usuest = document.getElementById('cbousu').value
      params.tipest = document.getElementById('cboest').value

      document.getElementById('idusua').value = document.getElementById('cbousu').value
      document.getElementById('tipest').value = document.getElementById('cboest').value

      getEstados()
    }
    const getEstados = () => {
      const xhr = new XMLHttpRequest()

      xhr.onload = function () {
        if (xhr.status === 200) {
          const estados = JSON.parse(xhr.response)

          calendario = new Calendar('#calendar', {
            language: 'es',
            enableRangeSelection: false,
            allowOverlap: false,
            minDate: new Date(currentYear, 0, 1),
            maxDate: new Date(currentYear, 11, 31),
            dataSource: estados.map(itm => ({
              idesta: itm.IDESTA,
              usuest: itm.USUEST,
              tipest: itm.TIPEST,
              startDate: new Date(itm.STRFEC),
              endDate: new Date(itm.STRFEC),
              color: '#0D8004',
            }))
          })
        }
      };

      xhr.open('POST', 'http://localhost:8100/api/estados/usuarios', true);
      xhr.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
      xhr.send(JSON.stringify(params))
    }

    arrayFilter(oficinaUsuario)
    getEstados()
  </script>
</body>

</html>