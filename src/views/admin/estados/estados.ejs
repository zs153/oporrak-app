<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <title>Estad√≠stica</title>
  <link rel="icon" href="/img/favicon.ico" type="image/x-icon">
  <!-- bootstrap -->
  <link rel="stylesheet" href="/css/bootstrap-icons.css">
  <!-- custom -->
  <link rel="stylesheet" href="/css/estilos.min.css">
  <link rel="stylesheet" href="/css/navbar.css">
  <style>
    table {
      font-size: 11px;
    }

    div.tableContainer {
      clear: both;
      height: 540px;
      overflow: auto;
      width: 1250px
    }

    html>body div.tableContainer {
      overflow: hidden;
      width: 1250px;
      margin: auto;
    }

    div.tableContainer table {
      float: left;
      width: auto;
    }

    thead.fixedHeader tr {
      position: relative;
    }

    #tblEstados thead,
    tbody {
      overflow-y: auto;
      overflow-x: hidden;
    }

    #tblEstados td,
    th {
      min-width: 28px;
      max-width: 28px;
      border: 1px solid #dee2e6;
      text-overflow: ellipsis;
    }

    #tblEstados tbody td:first-child {
      padding-left: 4px;
    }

    #tblEstados table tr:hover {
      background-color: #f1f3f5;
    }
  </style>
  <!-- timeline -->
  <style>
    .timeline {
      text-align: center;
      vertical-align: top;
      position: relative;
    }

    .timeline.vacas:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #0d8004;
    }

    .timeline.bajas:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #800209;
    }

    .timeline.trasp:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #803807;
    }

    .timeline.trasdo:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #808000;
    }

    .timeline.forma:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #063780;
    }

    .timeline.conci:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #ffa80a;
    }

    .timeline.reuni:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #dcd20d;
    }

    .timeline.horas:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #05cbf5;
    }

    .timeline.tele:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #000080;
    }

    .timeline.vacasH:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 14px;
      height: 10px;
      top: 4px;
      background-color: #0d8004;
    }

    .timeline.bajasH:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 14px;
      height: 10px;
      top: 4px;
      background-color: #800209;
    }

    .timeline.traspH:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 14px;
      height: 10px;
      top: 4px;
      background-color: #803807;
    }

    .timeline.trasdoH:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 14px;
      height: 10px;
      top: 4px;
      background-color: #808000;
    }

    .timeline.formaH:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 14px;
      height: 10px;
      top: 4px;
      background-color: #063780;
    }

    .timeline.conciH:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 14px;
      height: 10px;
      top: 4px;
      background-color: #ffa80a;
    }

    .timeline.reuniH:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 14px;
      height: 10px;
      top: 4px;
      background-color: #dcd20d;
    }

    .timeline.horasH:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 14px;
      height: 10px;
      top: 4px;
      background-color: #05cbf5;
    }

    .timeline.teleH:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 14px;
      height: 10px;
      top: 4px;
      background-color: #000080;
    }

    td div.popup {
      display: none;
      color: #000;
      text-decoration: none;
      padding: 3px;
    }

    td:hover div.popup {
      display: flex;
      position: absolute;
      background-color: #FFF;
      border: 1px solid #CCC;
      margin: 20px -100px 20px;
      z-index: 9999;
    }
  </style>
</head>

<body class="antialiased">
  <div class="wrapper">
    <%- include('../../partials/header') %>
    <%- include('../../partials/navbar', {opcion: 'ADMINISTRACION'}) %>
    <div class="page-wrapper">
      <div class="page-body">
        <div class="container-xl">
          <div class="d-flex">
            <span>Oficina: <%- datos.descripcionOficina %></span>
            <span class="ms-3">Perfil: <%- datos.descripcionPerfil %></span>
            <span class="ms-3">Periodo: <%- datos.strDesde %> al <%- datos.strHasta %></span>
            <a href="#" class="ms-auto" data-bs-toggle="modal" data-bs-target="#modal-config">
              <i class="bi bi-gear" style="font-size: 0.9rem; color: #626976;"></i>
            </a>
          </div>
          <div class="row row-deck row-cards">
            <div class="col-12">
              <div class="card">
                <div class="card-header">
                  <h3 class="card-title">Estados</h3>
                </div>
                <div class="card-body">
                  <div class="tableContainer">
                    <table id="tblEstados" cellpadding="0" cellspacing="0" width="100%" class="scrollTable">
                      <thead class="fixedHeader">
                      </thead>
                      <tbody class="scrollContent">
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <%- include('../../partials/footer') %>
  </div>

  <div class="modal modal-blur fade" id="modal-config" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title mt-0">Estados</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form action="/admin/estadisticas/fraudes" method="POST" onsubmit="return validate();">
          <input type="hidden" id="destip" name="destip">
          <input type="hidden" id="refcar" name="refcar">
          <div class="modal-body">
            <div class="card-body">
              <div class="row">
                <div class="col-6">
                  <div class="mb-1">
                    <div class="form-label">Oficina</div>
                    <select class="form-select" id="cboofi" name="ofiest" value="">
                      <% datos.oficinas.map(element=> { %>
                      <option value="<%= element.IDOFIC %>" <%- element.IDOFIC === user.oficina ? " selected" :"" %>>
                        <%= element.DESOFI %>
                      </option>
                      <% }) %>
                    </select>
                  </div>
                </div>
                <div class="col-6">
                  <div class="mb-1">
                    <div class="form-label">Perfil</div>
                    <select class="form-select" id="cboper" name="perusu" value="">
                      <% datos.arrTiposPerfil.map(element=> { %>
                      <option value="<%= element.id %>">
                        <%= element.des %>
                      </option>
                      <% }) %>
                    </select>
                  </div>
                </div>
              </div>
              <div class="row">
                <div class="col-6">
                  <div class="mb-1">
                    <div class="input-control">
                      <label class="form-label required">Fecha inicio</label>
                      <input type="date" name="desfec" id="desfec" class="form-control" value="<%- datos.desde %>" />
                      <div class="invalid-feedback"></div>
                    </div>
                  </div>
                </div>
                <div class="col-6">
                  <div class="mb-1">
                    <div class="input-control">
                      <label class="form-label required">Fecha fin</label>
                      <input type="date" name="hasfec" id="hasfec" class="form-control" value="<%- datos.hasta %>" />
                      <div class="invalid-feedback"></div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-link" data-bs-dismiss="modal" aria-label="Close">Cancelar</button>
            <button type="submit" class="btn btn-primary ms-auto">Estados</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script src="/js/ayuda.min.js"></script>
  <script>
    const desde = document.getElementById('desfec')
    const hasta = document.getElementById('hasfec')

    const validate = () => {
      const desdeValue = desde.value.trim()
      const hastaValue = hasta.value.trim()

      if (isNaN(Date.parse(desdeValue))) {
        setError(desde, 'Fecha requerida')
        setTimeout(function() {
          setSuccess(desde)
        }, 3000)
        return false
      } else {
        setSuccess(desde)
      }
      if (isNaN(Date.parse(hastaValue))) {
        setError(hasta, 'Fecha requerida')
        setTimeout(function() {
          setSuccess(hasta)
        }, 3000)
        return false
      } else {
        setSuccess(hasta)
      }

      return true
    }

    const setSuccess = (element) => {
      const inputControl = element.parentElement;
      const errorDisplay = inputControl.querySelector('.invalid-feedback');

      errorDisplay.innerText = '';
      inputControl.classList.add('is-valid');
      element.classList.remove('is-invalid');
    }
    const setError = (element, message) => {
      const inputControl = element.parentElement;
      const errorDisplay = inputControl.querySelector('.invalid-feedback');

      errorDisplay.innerText = message;
      element.classList.add('is-invalid');
      inputControl.classList.remove('is-valid');
    }
  </script>
  <script>
    const periodo = {
      desde: <%- datos.periodo.desde %>,
      hasta: <%- datos.periodo.hasta %>,
    }

    function estadosGantt(oficina, perfil, year, mes, periodo) {
      const estados = <%- JSON.stringify(datos.estados) %>
      const festivos = <%- JSON.stringify(datos.festivos) %>
      const diasPeriodo = <%- datos.diasPeriodo %>
      const desde = new Date("<%- datos.periodo.desde %>")
      const hasta = new Date("<%- datos.periodo.hasta %>")

      let activosOficina = new Array(diasPeriodo).fill(0)
      let estadosUsuario = []
      let oficinaActual = 0
      let usuarioActual = 0

      let rows = new Array();
      let delta = 0;
      let rowCount = 0;
      let nombreUsuario = '';

      estados.map(itm => {
        const dia = new Date(itm.FECHA).getDate();
        const diaSemana = new Date(itm.FECHA).getDay()
        const festivo = festivos.find(q => q.FECFES === itm.FECHA)

        if (usuarioActual != itm.IDUSUA) {
          if (usuarioActual) {
            rows[rowCount] = new Array();
            rows[rowCount][0] = nombreUsuario;
            rows[rowCount].push(estadosUsuario);

            //total
            for (var i = 0; i < diasPeriodo; i++) {
              if (estadosUsuario[i] === 0 || estadosUsuario[i] === 10) {
                activosOficina[i]++;
              }
              if (estadosUsuario[i] === -1) { // weekend
                activosOficina[i] = -1
              }
            }

            rowCount++;
          }

          estadosUsuario = new Array(diasPeriodo).fill(0);
          usuarioActual = itm.IDUSUA;
          nombreUsuario = itm.NOMUSU;

          if (oficinaActual != itm.OFIUSU) {
            if (oficinaActual) {
              rows[rowCount] = new Array();
              rows[rowCount][0] = 0; //indicador de total usuario
              rows[rowCount].push(activosOficina);

              //reiniciar
              activosOficina = new Array(diasPeriodo).fill(0);
              rowCount++;
            }

            rows[rowCount] = new Array();
            rows[rowCount][0] = -1; //indicador de total oficina
            rows[rowCount].push(itm.DESOFI);

            oficinaActual = itm.OFIUSU;
            rowCount++;
          }
        }

        //acumulado estados
        if (diaSemana === 6 || diaSemana === 0 || festivo) {
          estadosUsuario[dia - 1] = -1
        } else {
          estadosUsuario[dia - 1] = Number(itm.TIPEST)
        }
      })

      // ultimo usuario
      rows[rowCount] = new Array();
      rows[rowCount][0] = nombreUsuario;
      rows[rowCount].push(estadosUsuario);

      rowCount++;

      //total ultimo usuario
      for (var i = 0; i < diasPeriodo; i++) {
        if (estadosUsuario[i] === 0) {
          activosOficina[i]++;
        }
        if (estadosUsuario[i] === -1) {
          activosOficina[i] = ''
        }
      }

      rows[rowCount] = new Array();
      rows[rowCount][0] = 0;
      rows[rowCount].push(activosOficina);

      // pintar tabla
      let tblHeader = document.getElementsByTagName("thead")[0];
      let tblBody = document.getElementsByTagName("tbody")[0];
      let rowOficina = document.createElement("tr");
      let rowUsuario = document.createElement("tr");
      let rowHeader = document.createElement("tr");
      let hasHeaderOficina = false;

      var col = null;
      var texto = null;
      var hasHeader = false;
      var headerString = '';
      var subHeaderString = '';

      // descripcion header
      col = document.createElement('th')
      col.style.cssText = "color: orangered; border: none; text-align: center;"
      col.style.minWidth = "250px"

      rowHeader.appendChild(col)
      tblHeader.appendChild(rowHeader)

      // dias header
      for (let d = desde; d <= hasta; d.setDate(d.getDate() + 1)) {
        //const dayWeek = new Date(d).getDay()
        // const festivo = festivos.find(q => new Date(q.FECFES) === d)

        texto = document.createTextNode(('0' + d.getDate()).slice(-2))
        col = document.createElement('th')
        col.appendChild(texto)
        col.style.cssText = "border: none; text-align: center"

        rowHeader.appendChild(col)
        tblHeader.appendChild(rowHeader)
      }

      rows.map(itm => {
        if (itm[0] === -1) {
          // total oficina
          rowOficina = document.createElement('tr')
          col = document.createElement('td')
          texto = document.createTextNode(itm[1])

          col.appendChild(texto)
          col.style.cssText = "color: blue; border: none; text-align: center;"
          col.style.minWidth = "250px"

          rowOficina.appendChild(col)
          tblBody.appendChild(rowOficina)
        } else if (itm[0] === 0) {
          // total usuario
          rowOficina = document.createElement('tr')
          col = document.createElement('td')
          texto = document.createTextNode('Personal en activo')

          col.appendChild(texto)
          col.style.cssText = "color: green; border: none; text-align: left;"

          rowOficina.appendChild(col)

          for (var i = 0; i < diasPeriodo; i++) {
            var col = document.createElement("td")
            col.style.cssText = "color: green; border: none; text-align: center;"
            var texto = document.createTextNode(itm[1][i])
            col.appendChild(texto)
            rowOficina.appendChild(col)
          }

          tblBody.appendChild(rowOficina)
        } else {
          // nombre usuario
          rowUsuario = document.createElement('tr')
          col = document.createElement('td')
          texto = document.createTextNode(itm[0])

          col.appendChild(texto)
          rowUsuario.appendChild(col)
          tblBody.appendChild(rowUsuario)

          // tipos de estado
          for (var i = 0; i < diasPeriodo; i++) {
            if (itm[1][i] === -1) {
              // festivo
              var col = document.createElement("td")
              col.style.background = '#FAFAFA'

              rowUsuario.appendChild(col)
            } else if (itm[1][i] === 0) {
              // usuario en activo
              var col = document.createElement("td")

              rowUsuario.appendChild(col)
            } else if (itm[1][i] === <%- datos.tiposEstado.vacacion.ID %>) {
              var col = document.createElement("td")
              var sub = document.createElement("div")
              var texto = document.createTextNode('vacaci√≥n')

              col.className = 'timeline vacas'
              rowUsuario.appendChild(col)

              sub.className = 'popup'
              sub.appendChild(texto)
              col.appendChild(sub);
              rowUsuario.appendChild(col)
            } else if (itm[1][i] === <%- datos.tiposEstado.baja.ID %>) {
              var col = document.createElement("td")
              var sub = document.createElement("div")
              var texto = document.createTextNode('baja')

              col.className = 'timeline bajas'
              rowUsuario.appendChild(col)

              sub.className = 'popup'
              sub.appendChild(texto)
              col.appendChild(sub)
              rowUsuario.appendChild(col)
            } else if (itm[1][i] === <%- datos.tiposEstado.traspaso.ID %>) {
              var col = document.createElement("td")
              var sub = document.createElement("div")
              var texto = document.createTextNode('traspaso')

              col.className = 'timeline trasp'
              rowUsuario.appendChild(col)

              sub.className = 'popup'
              sub.appendChild(texto)
              col.appendChild(sub)
              rowUsuario.appendChild(col)
            } else if (itm[1][i] === <%- datos.tiposEstado.formacion.ID %>) {
              var col = document.createElement("td")
              var sub = document.createElement("div")
              var texto = document.createTextNode('formaci√≥n')

              col.className = 'timeline forma'
              rowUsuario.appendChild(col)

              sub.className = 'popup'
              sub.appendChild(texto)
              col.appendChild(sub)
              rowUsuario.appendChild(col)
            } else if (itm[1][i] === <%- datos.tiposEstado.conciliacion.ID %>) {
              var col = document.createElement("td");
              var sub = document.createElement("div");
              var texto = document.createTextNode('conciliaci√≥n');

              col.className = 'timeline conci';
              rowUsuario.appendChild(col);

              sub.className = 'popup';
              sub.appendChild(texto);
              col.appendChild(sub);
              rowUsuario.appendChild(col);
            } else if (itm[1][i] === <%- datos.tiposEstado.reunion.ID %>) {
              var col = document.createElement("td");
              var sub = document.createElement("div");
              var texto = document.createTextNode('reuni√≥n');

              col.className = 'timeline reuni';
              rowUsuario.appendChild(col);

              sub.className = 'popup';
              sub.appendChild(texto);
              col.appendChild(sub);
              rowUsuario.appendChild(col);
            } else if (itm[1][i] === <%- datos.tiposEstado.horas.ID %>) {
              var col = document.createElement("td");
              var sub = document.createElement("div");
              var texto = document.createTextNode('horas');

              col.className = 'timeline horas';
              rowUsuario.appendChild(col);

              sub.className = 'popup';
              sub.appendChild(texto);
              col.appendChild(sub);
              rowUsuario.appendChild(col);
            } else if (itm[1][i] === <%- datos.tiposEstado.telefono.ID %>) {
              var col = document.createElement("td");
              var sub = document.createElement("div");
              var texto = document.createTextNode('tel√©fono');

              col.className = 'timeline tele';
              rowUsuario.appendChild(col);

              sub.className = 'popup';
              sub.appendChild(texto);
              col.appendChild(sub);
              rowUsuario.appendChild(col);
            } else if (itm[1][i] === <%- datos.tiposEstado.traspasado.ID %>) {
              var col = document.createElement("td")
              var sub = document.createElement("div")
              var texto = document.createTextNode('traspasado')

              col.className = 'timeline trasdo'
              rowUsuario.appendChild(col)

              sub.className = 'popup'
              sub.appendChild(texto)
              col.appendChild(sub)
              rowUsuario.appendChild(col)
            }
          }
        }
      })

      // let tr = document.getElementById('tblEstados').tHead.children[0]
      // let th = document.createElement('th')
      // th.innerHTML = headerString
      // tr.appendChild(th)
    }
    estadosGantt()
  </script>
</body>

</html>