<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <title>Estados</title>
  <link rel="icon" href="/img/favicon.ico" type="image/x-icon">
  <!-- styles -->
  <link rel="stylesheet" href="/css/styles.css">
  <style>
    table {
      font-size: 11px;
    }

    div.tableContainer {
      clear: both;
      height: 100%;
      overflow: auto;
      width: 1250px
    }

    html>body div.tableContainer {
      overflow: hidden;
      width: 1250px;
      margin: auto;
    }

    div.tableContainer table {
      float: left;
      width: auto;
    }

    thead.fixedHeader tr {
      position: relative;
    }

    thead.fixedHeader th {
      font-weight: normal;
      padding: 4px 3px;
      text-align: left;
      min-width: 28px;
    }

    html>body tbody.scrollContent {
      display: block;
      height: 65vh;
      overflow: auto;
      width: 1246px;
    }

    tbody.scrollContent td,
    tbody.scrollContent tr.normalRow td {
      border-bottom: 1px solid #DDD;
      border-left: 1px solid #DDD;
      border-right: 1px solid #CCC;
      border-top: none;
      min-width: 28px;
    }

    tbody.scrollContent tr.alternateRow td {
      background: #EEE;
      border-bottom: none;
      border-left: none;
      border-right: 1px solid #CCC;
      border-top: 1px solid #DDD;
      min-width: 28px;
    }

    html>body thead.fixedHeader {
      display: block;
      overflow: auto;
      width: 1246px;
    }

    #tblEstados thead,
    tbody {
      overflow-y: auto;
      overflow-x: hidden;
    }

    #tblEstados td,
    th {
      min-width: 28px;
      max-width: 28px;
      border: 1px solid #dee2e6;
      text-overflow: ellipsis;
    }

    #tblEstados tbody td:first-child {
      padding-left: 4px;
    }

    #tblEstados table tr:hover {
      background-color: #f1f3f5;
    }
  </style>

  <!-- timeline -->
  <style>
    .timeline {
      text-align: center;
      vertical-align: top;
      position: relative;
    }

    .timeline.vacas:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #0d8004;
    }

    .timeline.bajas:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #D80000;
    }

    .timeline.trasp:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #61054a;
    }

    .timeline.trasdo:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #808000;
    }

    .timeline.forma:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #063780;
    }

    .timeline.conci:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #fea500;
    }

    .timeline.reuni:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #dcd20d;
    }

    .timeline.horas:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #05cbf5;
    }

    .timeline.tele:before {
      content: '';
      display: inline-block;
      position: absolute;
      left: -1px;
      width: 28px;
      height: 10px;
      top: 4px;
      background-color: #e6b000;
    }

    td div.popup {
      display: none;
      color: #000;
      text-decoration: none;
      padding: 3px;
    }

    td:hover div.popup {
      display: flex;
      position: absolute;
      background-color: #FFF;
      border: 1px solid #CCC;
      margin: 20px -100px 20px;
      z-index: 9999;
    }
  </style>
</head>

<body class="antialiased">
  <div class="wrapper">
    <%- include('../../partials/header') %>
    <%- include('../../partials/navbar', {opcion: 'ESTADO'}) %>
    <div class="page-wrapper">
      <div class="page-body">
        <div class="container-xl">
          <div class="d-flex p-1">
            <span>Oficina: <%- datos.descripcionOficina %></span>
            <span class="ms-3">Perfil: <%- datos.descripcionPerfil %></span>
            <span class="ms-3">Periodo: <%- datos.strDesde %> al <%- datos.strHasta %></span>
            <a href="#" class="ms-auto" data-bs-toggle="modal" data-bs-target="#modal-config">
              <svg xmlns="http://www.w3.org/2000/svg" class="icon" width="24" height="24" viewBox="0 0 24 24">
                <path
                  d="m10.475 20.575-.35-2.775q-.4-.1-1.05-.45t-1.225-.8l-2.525 1.075-1.525-2.7 2.2-1.65q-.075-.3-.1-.613-.025-.312-.025-.637 0-.275.037-.587L6 10.7 3.8 9.05 5.325 6.4 7.85 7.475q.5-.425 1.088-.762.587-.338 1.162-.538l.375-2.775h3.075l.35 2.8q.65.225 1.138.513.487.287 1.012.762L18.7 6.4l1.525 2.65L17.9 10.8q.075.35.1.625.025.275.025.575 0 .25-.025.537-.025.288-.1.713l2.275 1.675-1.55 2.7L16.05 16.5q-.5.45-1.012.762-.513.313-1.138.513l-.35 2.8Zm1.45-6.45q.9 0 1.525-.613.625-.612.625-1.512t-.625-1.525q-.625-.625-1.525-.625-.9 0-1.512.625Q9.8 11.1 9.8 12q0 .9.613 1.512.612.613 1.512.613Zm0-.625q-.625 0-1.062-.438-.438-.437-.438-1.062t.438-1.062q.437-.438 1.062-.438t1.063.438q.437.437.437 1.062t-.437 1.062q-.438.438-1.063.438ZM12 11.975Zm-1 7.95h1.95l.375-2.725q.75-.2 1.313-.525.562-.325 1.212-.95l2.5 1.075 1-1.675-2.225-1.65q.125-.45.163-.8.037-.35.037-.675 0-.375-.037-.688-.038-.312-.163-.737L19.4 8.85l-.975-1.675-2.6 1.075q-.4-.45-1.162-.9-.763-.45-1.363-.575L13 4.05h-2l-.275 2.725q-.775.15-1.375.475-.6.325-1.25.975l-2.5-1.05-1 1.675 2.175 1.625q-.125.325-.175.725-.05.4-.05.8 0 .375.05.738.05.362.15.737l-2.15 1.65 1 1.675 2.475-1.05q.6.625 1.213.962.612.338 1.387.513Z" />
              </svg>
            </a>
          </div>
          <div class="row">
            <div class="col-12">
              <div class="card">
                <div class="card-header">
                  <h3 class="card-title">Estados</h3>
                </div>
                <div class="card-body">
                  <div class="tableContainer">
                    <table id="tblEstados">
                      <thead class="fixedHeader">
                      </thead>
                      <tbody class="scrollContent">
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <%- include('../../partials/footer') %>
  </div>

  <div class="modal modal-blur fade" id="modal-config" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title mt-0">Estados</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form action="/admin/estados/estados" method="POST" onsubmit="return validate();">
          <input type="hidden" id="desofi" name="desofi" value="<%- datos.descripcionOficina %>">
          <input type="hidden" id="desper" name="desper" value="<%- datos.descripcionPerfil %>">
          <input type="hidden" id="desde" name="desde" value="<%- datos.periodo.DESDE %>">
          <input type="hidden" id="hasta" name="hasta" value="<%- datos.periodo.HASTA %>">
          <div class="modal-body">
            <div class="card-body">
                <div class="row">
                  <div class="col-6">
                    <div class="mb-1">
                      <div class="form-label">Oficina</div>
                      <select class="form-select" id="cboofi" name="ofiest" value="">
                        <% if (datos.oficinas.length > 1) { %>
                        <option value="0">
                          DESCENTRALIZADAS
                        </option>
                        <% } %>
                        <% datos.oficinas.map(element=> { %>
                        <option value="<%- element.IDOFIC %>">
                          <%- element.DESOFI %>
                        </option>
                        <% }) %>
                      </select>
                    </div>
                  </div>
                  <div class="col-6">
                    <div class="mb-1">
                      <div class="form-label">Perfil</div>
                      <select class="form-select" id="cboper" name="perusu" value="">
                        <% datos.arrTiposPerfil.map(element=> { %>
                        <option value="<%= element.id %>"<%- element.des === "INFORMADOR" ? " selected":"" %>>
                          <%= element.des %>
                        </option>
                        <% }) %>
                      </select>
                    </div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-6">
                    <div class="mb-1">
                      <div class="input-control">
                        <label class="form-label required">Fecha inicio</label>
                        <input type="date" name="desfec" id="desfec" class="form-control" value="<%- new Date().toISOString().slice(0,10) %>" />
                        <div class="invalid-feedback"></div>
                      </div>
                    </div>
                  </div>
                  <div class="col-6">
                    <div class="mb-1">
                      <div class="form-label">Formato</div>
                      <select class="form-select" id="cbofor" name="format" value="">
                        <option value="1">MENSUAL</option>
                        <option value="2">SEMANAL</option>
                      </select>
                    </div>
                  </div>
                </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-white" data-bs-dismiss="modal" aria-label="Close">Cancelar</button>
            <button type="submit" class="btn btn-success ms-auto">Generar estadística</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script src="/js/ayuda.min.js"></script>
  <script>
    const periodo = {
      desde: '<%- datos.periodo.DESDE %>',
      hasta: '<%- datos.periodo.HASTA %>',
    }
    const desfec = document.getElementById('desfec')

    // proc
    const validate = () => {
      const desfecValue = desfec.value.trim()

      if (isNaN(Date.parse(desfecValue))) {
        setError(desfec, 'Fecha requerida')
        setTimeout(function () {
          setSuccess(desfec)
        }, 3000)
        return false
      }

      return true
    }
    const setSuccess = (element) => {
      const inputControl = element.parentElement;
      const errorDisplay = inputControl.querySelector('.invalid-feedback');

      errorDisplay.innerText = '';
      inputControl.classList.add('is-valid');
      element.classList.remove('is-invalid');
    }
    const setError = (element, message) => {
      const inputControl = element.parentElement;
      const errorDisplay = inputControl.querySelector('.invalid-feedback');

      errorDisplay.innerText = message;
      element.classList.add('is-invalid');
      inputControl.classList.remove('is-valid');
    }
    const yearMonthDayToUTCString = (year, month, day) => {
      const yearCDM = ('000' + year).slice(-4)
      const monthCDM = ('0' + month).slice(-2)
      const dayCDM = ('0' + day).slice(-2)

      const fecha = new Date(`${yearCDM}-${monthCDM}-${dayCDM}T00:00:00`)
      const userTimezoneOffset = fecha.getTimezoneOffset() * 60000

      return new Date(fecha.getTime() - userTimezoneOffset).toISOString().slice(0, 10)
    }
    const estadosGantt = () => {
      const estados = <%- JSON.stringify(datos.estados) %>
      const festivos = <%- JSON.stringify(datos.festivos) %>
      const diasPeriodo = <%- datos.diasPeriodo %>
      const desde = new Date(periodo.desde)
      const hasta = new Date(periodo.hasta)

      let activosOficina = new Array(diasPeriodo).fill(0)
      let estadosUsuario = []
      let oficinaActual = 0
      let usuarioActual = 0

      let rows = new Array();
      let delta = 0;
      let rowCount = 0;
      let nombreUsuario = '';

      if (estados.length === 0) {
        return
      }

      estados.map(itm => {
        const dia = new Date(itm.FECHA).getDate();
        const diaSemana = new Date(itm.FECHA).getDay()
        const festivo = festivos[festivos.indexOf(itm.FECHA)]

        if (oficinaActual != itm.OFIUSU || usuarioActual != itm.IDUSUA) {
          if (usuarioActual) {
            rows[rowCount] = new Array();
            rows[rowCount][0] = nombreUsuario;
            rows[rowCount].push(estadosUsuario);
            rowCount++;

            //total
            for (var i = 0; i < diasPeriodo; i++) {
              if (estadosUsuario[i] === 1 || estadosUsuario[i] === 10) {
                activosOficina[i]++;
              }
              if (estadosUsuario[i] === -1) {
                activosOficina[i] = ''
              }
            }
          }

          estadosUsuario = new Array(diasPeriodo).fill(1);
          usuarioActual = itm.IDUSUA;
          nombreUsuario = itm.NOMUSU;
        }

        if (oficinaActual != itm.OFIUSU) {
          if (oficinaActual) {
            rows[rowCount] = new Array();
            rows[rowCount][0] = 0; //indicador de total usuario
            rows[rowCount].push(activosOficina);
            rowCount++;

            //reiniciar
            activosOficina = new Array(diasPeriodo).fill(0)
          }

          rows[rowCount] = new Array();
          rows[rowCount][0] = -1; //indicador de total oficina
          rows[rowCount].push(itm.DESOFI);
          rowCount++;

          oficinaActual = itm.OFIUSU
        }

        //acumulado estados
        if (diaSemana === 6 || diaSemana === 0 || festivo) {
          estadosUsuario[dia - 1] = -1
        } else {
          estadosUsuario[dia - 1] = Number(itm.TIPEST)
        }
      })

      // ultimo usuario
      rows[rowCount] = new Array();
      rows[rowCount][0] = nombreUsuario;
      rows[rowCount].push(estadosUsuario);

      rowCount++;

      //total ultimo usuario
      for (var i = 0; i < diasPeriodo; i++) {
        if (estadosUsuario[i] === 1 || estadosUsuario[i] === 10) {
          activosOficina[i]++;
        }
        if (estadosUsuario[i] === -1) {
          activosOficina[i] = ''
        }
      }

      rows[rowCount] = new Array();
      rows[rowCount][0] = 0;
      rows[rowCount].push(activosOficina);

      // pintar tabla
      let tblHeader = document.getElementsByTagName("thead")[0];
      let tblBody = document.getElementsByTagName("tbody")[0];
      let rowOficina = document.createElement("tr");
      let rowUsuario = document.createElement("tr");
      let rowHeader = document.createElement("tr");
      let hasHeaderOficina = false;

      var col = null;
      var texto = null;
      var hasHeader = false;
      var headerString = '';
      var subHeaderString = '';

      // descripcion header
      col = document.createElement('th')
      col.style.cssText = "border: none; text-align: center;"
      col.style.minWidth = "250px"

      rowHeader.appendChild(col)
      tblHeader.appendChild(rowHeader)

      // dias header
      for (let d = desde; d <= hasta; d.setDate(d.getDate() + 1)) {
        texto = document.createTextNode(('0' + d.getDate()).slice(-2))
        col = document.createElement('th')
        col.appendChild(texto)
        col.style.cssText = "border: none; text-align: center"

        rowHeader.appendChild(col)
        tblHeader.appendChild(rowHeader)
      }

      rows.map(itm => {
        if (itm[0] === -1) {
          // total oficina
          rowOficina = document.createElement('tr')
          col = document.createElement('td')
          texto = document.createTextNode(itm[1])

          col.appendChild(texto)
          col.style.cssText = "color: orangered; border: none; text-align: center;"
          col.style.minWidth = "250px"

          rowOficina.appendChild(col)
          tblBody.appendChild(rowOficina)
        } else if (itm[0] === 0) {
          // total usuario
          rowOficina = document.createElement('tr')
          col = document.createElement('td')
          texto = document.createTextNode('Personal en activo')

          col.appendChild(texto)
          col.style.cssText = "color: blue; border: none; text-align: left;"

          rowOficina.appendChild(col)

          for (var i = 0; i < diasPeriodo; i++) {
            var col = document.createElement("td")
            col.style.cssText = "color: blue; border: none; text-align: center;"
            var texto = document.createTextNode(itm[1][i])
            col.appendChild(texto)
            rowOficina.appendChild(col)
          }

          tblBody.appendChild(rowOficina)
        } else {
          // nombre usuario
          rowUsuario = document.createElement('tr')
          col = document.createElement('td')
          texto = document.createTextNode(itm[0])

          col.appendChild(texto)
          rowUsuario.appendChild(col)
          tblBody.appendChild(rowUsuario)

          // tipos de estado
          for (var i = 0; i < diasPeriodo; i++) {
            if (itm[1][i] === -1) {
              // festivo
              var col = document.createElement("td")
              col.style.background = '#FAFAFA'

              rowUsuario.appendChild(col)
            } else if (itm[1][i] === 0) {
              // usuario en activo
              var col = document.createElement("td")
              col.style.background = '#FAFAFA'

              rowUsuario.appendChild(col)
            } else if (itm[1][i] === 1) {
              // usuario en activo
              var col = document.createElement("td")

              rowUsuario.appendChild(col)
            } else if (itm[1][i] === <%- datos.tiposEstado.vacacion.ID %>) {
              var col = document.createElement("td")
              var sub = document.createElement("div")
              var texto = document.createTextNode('vacación')

              col.className = 'timeline vacas'
              rowUsuario.appendChild(col)

              sub.className = 'popup'
              sub.appendChild(texto)
              col.appendChild(sub);
              rowUsuario.appendChild(col)
            } else if (itm[1][i] === <%- datos.tiposEstado.baja.ID %>) {
              var col = document.createElement("td")
              var sub = document.createElement("div")
              var texto = document.createTextNode('baja')

              col.className = 'timeline bajas'
              rowUsuario.appendChild(col)

              sub.className = 'popup'
              sub.appendChild(texto)
              col.appendChild(sub)
              rowUsuario.appendChild(col)
            } else if (itm[1][i] === <%- datos.tiposEstado.traspaso.ID %>) {
              var col = document.createElement("td")
              var sub = document.createElement("div")
              var texto = document.createTextNode('traspaso')

              col.className = 'timeline trasp'
              rowUsuario.appendChild(col)

              sub.className = 'popup'
              sub.appendChild(texto)
              col.appendChild(sub)
              rowUsuario.appendChild(col)
            } else if (itm[1][i] === <%- datos.tiposEstado.formacion.ID %>) {
              var col = document.createElement("td")
              var sub = document.createElement("div")
              var texto = document.createTextNode('formación')

              col.className = 'timeline forma'
              rowUsuario.appendChild(col)

              sub.className = 'popup'
              sub.appendChild(texto)
              col.appendChild(sub)
              rowUsuario.appendChild(col)
            } else if (itm[1][i] === <%- datos.tiposEstado.conciliacion.ID %>) {
              var col = document.createElement("td");
              var sub = document.createElement("div");
              var texto = document.createTextNode('conciliación');

              col.className = 'timeline conci';
              rowUsuario.appendChild(col);

              sub.className = 'popup';
              sub.appendChild(texto);
              col.appendChild(sub);
              rowUsuario.appendChild(col);
            } else if (itm[1][i] === <%- datos.tiposEstado.reunion.ID %>) {
              var col = document.createElement("td");
              var sub = document.createElement("div");
              var texto = document.createTextNode('reunión');

              col.className = 'timeline reuni';
              rowUsuario.appendChild(col);

              sub.className = 'popup';
              sub.appendChild(texto);
              col.appendChild(sub);
              rowUsuario.appendChild(col);
            } else if (itm[1][i] === <%- datos.tiposEstado.horas.ID %>) {
              var col = document.createElement("td");
              var sub = document.createElement("div");
              var texto = document.createTextNode('horas');

              col.className = 'timeline horas';
              rowUsuario.appendChild(col);

              sub.className = 'popup';
              sub.appendChild(texto);
              col.appendChild(sub);
              rowUsuario.appendChild(col);
            } else if (itm[1][i] === <%- datos.tiposEstado.telefono.ID %>) {
              var col = document.createElement("td");
              var sub = document.createElement("div");
              var texto = document.createTextNode('teléfono');

              col.className = 'timeline tele';
              rowUsuario.appendChild(col);

              sub.className = 'popup';
              sub.appendChild(texto);
              col.appendChild(sub);
              rowUsuario.appendChild(col);
            } else if (itm[1][i] === <%- datos.tiposEstado.traspasado.ID %>) {
              var col = document.createElement("td")
              var sub = document.createElement("div")
              var texto = document.createTextNode('traspasado')

              col.className = 'timeline trasdo'
              rowUsuario.appendChild(col)

              sub.className = 'popup'
              sub.appendChild(texto)
              col.appendChild(sub)
              rowUsuario.appendChild(col)
            }
          }
        }
      })
    }

    // eventos form
    document.getElementById('desfec').addEventListener('change', function (e) {
      const formato = document.getElementById('cbofor').value
      const currentYear = new Date(document.querySelector("#desfec").value).getFullYear()
      const currentMonth = new Date(document.querySelector("#desfec").value).getMonth() + 1

      let desde = new Date(yearMonthDayToUTCString(currentYear, currentMonth, 1))
      let hasta = desde

      if (formato === '1') {
        const lastDayMonth = new Date(currentYear, currentMonth, 0).getDate()

        hasta = new Date(yearMonthDayToUTCString(currentYear, currentMonth, lastDayMonth))
      } else {
        let t = new Date()

        t = new Date(document.querySelector("#desfec").value)

        if (t.getDay() === 0) {
          t.setDate(t.getDate() + 1)

          desde = new Date(t)
          hasta = new Date(t.setDate(t.getDate() + 4))
        } else if (t.getDay() === 1) {
          t = new Date(new Date(document.querySelector("#desfec").value))
          t.setDate(t.getDate() + 4)

          desde = new Date(new Date(document.querySelector("#desfec").value))
          hasta = t
        } else {
          const primerDiaSemana = t.getDate() - t.getDay()

          t.setDate(desde.getDate() + primerDiaSemana)
          desde = new Date(t)
          hasta = new Date(t.setDate(t.getDate() + 4))
        }
      }

      document.querySelector("#desde").value = desde.toISOString().slice(0, 10)
      document.querySelector("#hasta").value = hasta.toISOString().slice(0, 10)
    })
    document.getElementById('cbofor').addEventListener('change', function (e) {
      const currentYear = new Date(document.querySelector("#desfec").value).getFullYear()
      const currentMonth = new Date(document.querySelector("#desfec").value).getMonth() + 1

      let desde = new Date(yearMonthDayToUTCString(currentYear, currentMonth, 1))
      let hasta = desde

      if (e.target.value === '1') {
        const lastDayMonth = new Date(currentYear, currentMonth, 0).getDate()

        hasta = new Date(yearMonthDayToUTCString(currentYear, currentMonth, lastDayMonth))
      } else {
        let t = new Date()

        t = new Date(document.querySelector("#desfec").value)

        if (t.getDay() === 0) {
          t.setDate(t.getDate() + 1)

          desde = new Date(t)
          hasta = new Date(t.setDate(t.getDate() + 4))
        } else if (t.getDay() === 1) {
          t = new Date(new Date(document.querySelector("#desfec").value))
          t.setDate(t.getDate() + 4)

          desde = new Date(new Date(document.querySelector("#desfec").value))
          hasta = t
        } else {
          const primerDiaSemana = t.getDate() - t.getDay()

          t.setDate(desde.getDate() + primerDiaSemana)
          desde = new Date(t)
          hasta = new Date(t.setDate(t.getDate() + 4))
        }
      }

      document.querySelector("#desde").value = desde.toISOString().slice(0, 10)
      document.querySelector("#hasta").value = hasta.toISOString().slice(0, 10)
    })

    // show
    estadosGantt()
  </script>
</body>

</html>