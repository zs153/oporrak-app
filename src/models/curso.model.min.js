/*! oporrak 2023-05-14 */
import{BIND_OUT,NUMBER}from"oracledb";import{simpleExecute}from"../services/database.js";const cursoSql=`SELECT cc.*
FROM cursos cc
`,insertSql=`BEGIN OPORRAK_PKG.INSERTCURSO(
  :descur,
  :durcur,
  :poncur,
  :notcur,
  :stacur,
  :usumov,
  :tipmov,
  :idcurs
); END;
`,updateSql=`BEGIN OPORRAK_PKG.UPDATECURSO(
  :idcurs,
  :descur,
  :durcur,
  :poncur,
  :notcur,
  :stacur,
  :usumov,
  :tipmov
); END;
`,removeSql=`BEGIN OPORRAK_PKG.DELETECURSO(
  :idcurs,
  :usumov,
  :tipmov 
); END;
`,turnoSql=`SELECT 
  tt.idturn, tt.destur, tt.loctur, tt.initur, tt.fintur,
  TO_CHAR(tt.initur, 'DD/MM/YYYY') "STRINI",
  TO_CHAR(tt.fintur, 'DD/MM/YYYY') "STRFIN",
  LPAD(EXTRACT(HOUR FROM tt.inihor), 2, '0')||':'||LPAD(EXTRACT(MINUTE FROM tt.inihor), 2, '0') AS "INIHOR",
  LPAD(EXTRACT(HOUR FROM tt.finhor), 2, '0')||':'||LPAD(EXTRACT(MINUTE FROM tt.finhor), 2, '0') AS "FINHOR"
FROM turnos tt
INNER JOIN turnoscurso tc ON tc.idturn = tt.idturn
`,insertTurnoSql=`BEGIN OPORRAK_PKG.INSERTTURNOCURSO(
  :idcurs,
  :destur,
  TO_DATE(:initur,'YYYY-MM-DD'),
  TO_DATE(:fintur,'YYYY-MM-DD'),
  :inihor,
  :finhor,
  :loctur,
  :usumov,
  :tipmov,
  :idturn
); END;
`,updateTurnoSql=`BEGIN OPORRAK_PKG.UPDATETURNOCURSO(
  :idturn,
  :destur,
  TO_DATE(:initur,'YYYY-MM-DD'),
  TO_DATE(:fintur,'YYYY-MM-DD'),
  :inihor,
  :finhor,
  :loctur,
  :usumov,
  :tipmov
); END;
`,removeTurnoSql=`BEGIN OPORRAK_PKG.DELETETURNOCURSO(
  :idcurs,
  :idturn,
  :usumov,
  :tipmov
); END;
`,matriculaSql=`SELECT 
  mm.idmatr, mm.desmat, mm.notmat, mm.stamat,
  TO_CHAR(mm.inimat, 'YYYY-MM-DD') "INIMAT",
  TO_CHAR(mm.finmat, 'YYYY-MM-DD') "FINMAT",
  TO_CHAR(mm.inimat, 'DD/MM/YYYY') "STRINI",
  TO_CHAR(mm.finmat, 'DD/MM/YYYY') "STRFIN"
FROM matriculas mm
INNER JOIN matriculascurso mc ON mc.idmatr = mm.idmatr
`,insertMatriculaSql=`BEGIN OPORRAK_PKG.INSERTMATRICULACURSO(
  :idcurs,
  :desmat,
  TO_DATE(:inimat,'YYYY-MM-DD'),
  TO_DATE(:finmat,'YYYY-MM-DD'),
  :notmat,
  :stamat,
  :usumov,
  :tipmov,
  :idmatr
); END;
`,updateMatriculaSql=`BEGIN OPORRAK_PKG.UPDATEMATRICULA(
  :idmatr,
  :desmat,
  TO_DATE(:inimat,'YYYY-MM-DD'),
  TO_DATE(:finmat,'YYYY-MM-DD'),
  :notmat,
  :stamat,
  :usumov,
  :tipmov
); END;
`,removeMatriculaSql=`BEGIN OPORRAK_PKG.DELETEMATRICULACURSO(
  :idcurs,
  :idmatr,
  :usumov,
  :tipmov
); END;
`,insertUsuarioSql=`BEGIN OPORRAK_PKG.INSERTUSUARIOCURSO(
  :idcurs,
  :arrusu,
  :usumov,
  :tipmov
); END;
`,removeUsuarioSql=`BEGIN OPORRAK_PKG.DELETEUSUARIOCURSO(
  :idcurs,
  :idusua,
  :usumov,
  :tipmov
); END;
`,insertUsuarioTurnoSql=`BEGIN OPORRAK_PKG.INSERTUSUARIOTURNO(
  :idturn,
  :tipest,
  :arrusu,
  :usumov,
  :tipmov
); END;
`,removeUsuarioTurnoSql=`BEGIN OPORRAK_PKG.DELETEUSUARIOTURNO(
  :idturn,
  :idusua,
  :usumov,
  :tipmov
); END;
`,insertUsuarioMatriculaSql=`BEGIN OPORRAK_PKG.INSERTUSUARIOMATRICULA(
  :idmatr,
  :arrusu,
  :usumov,
  :tipmov
); END;
`,removeUsuarioMatriculaSql=`BEGIN OPORRAK_PKG.DELETEUSUARIOMATRICULA(
  :idmatr,
  :idusua,
  :usumov,
  :tipmov
); END;
`,find=async u=>{var t=u;let r=cursoSql;u.IDCURS&&(r+="WHERE cc.idcurs = :idcurs");u=await simpleExecute(r,t);return u?{stat:u.rows.length,data:u.rows}:{stat:0,data:[]}},findAll=async u=>{var t={limit:u.limit,part:u.part};let r="";"next"===u.direction?(t.idcurs=u.cursor.next,r+=`SELECT cc.idcurs,cc.descur,cc.stacur
    FROM cursos cc
    WHERE cc.idcurs > :idcurs
    AND (
      cc.descur LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY cc.idcurs ASC
    FETCH NEXT :limit ROWS ONLY`):(t.idcurs=u.cursor.prev,r+=`SELECT cc.idcurs,cc.descur,cc.stacur
    FROM cursos cc
    WHERE cc.idcurs < :idcurs
    AND (
      cc.descur LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY cc.idcurs DESC
    FETCH NEXT :limit ROWS ONLY`);u=await simpleExecute(r,t);return u?{stat:u.rows.length,data:u.rows}:{stat:0,data:[]}},insert=async u=>{u.IDCURS={dir:BIND_OUT,type:NUMBER};var t=await simpleExecute(insertSql,u);return t?(u.IDCURS=t.outBinds.IDCURS,{stat:1,data:u}):{stat:0,data:[]}},update=async u=>{return await simpleExecute(updateSql,u)?{stat:1,data:u}:{stat:null,data:[]}},remove=async u=>{return await simpleExecute(removeSql,u)?{stat:1,data:u}:{stat:null,data:[]}},turno=async u=>{var t=u;let r=turnoSql;u.IDCURS?r+="WHERE tc.idcurs = :idcurs":u.IDTURN&&(r+="WHERE tc.idturn = :idturn");u=await simpleExecute(r,t);return u?{stat:u.rows.length,data:u.rows}:{stat:0,data:[]}},turnos=async u=>{var t={idcurs:u.idcurs,limit:u.limit,part:u.part};let r="";"next"===u.direction?(t.idturn=u.cursor.next,r+=`SELECT 
    tt.idturn, tt.destur, tt.loctur, tt.initur, tt.fintur,
    TO_CHAR(tt.initur, 'DD/MM/YYYY') "STRINI",
    TO_CHAR(tt.fintur, 'DD/MM/YYYY') "STRFIN",
    LPAD(EXTRACT(HOUR FROM tt.inihor), 2, '0')||':'||LPAD(EXTRACT(MINUTE FROM tt.inihor), 2, '0') AS "INIHOR",
    LPAD(EXTRACT(HOUR FROM tt.finhor), 2, '0')||':'||LPAD(EXTRACT(MINUTE FROM tt.finhor), 2, '0') AS "FINHOR"
    FROM turnos tt
    INNER JOIN turnoscurso tc ON tc.idturn = tt.idturn
    WHERE tt.idturn > :idturn AND tc.idcurs = :idcurs
    AND (
      tt.destur LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY tt.idturn ASC
    FETCH NEXT :limit ROWS ONLY`):(t.idturn=u.cursor.prev,r+=`SELECT 
    tt.idturn, tt.destur, tt.loctur, tt.initur, tt.fintur,
    TO_CHAR(tt.initur, 'DD/MM/YYYY') "STRINI",
    TO_CHAR(tt.fintur, 'DD/MM/YYYY') "STRFIN",
    LPAD(EXTRACT(HOUR FROM tt.inihor), 2, '0')||':'||LPAD(EXTRACT(MINUTE FROM tt.inihor), 2, '0') AS "INIHOR",
    LPAD(EXTRACT(HOUR FROM tt.finhor), 2, '0')||':'||LPAD(EXTRACT(MINUTE FROM tt.finhor), 2, '0') AS "FINHOR"
    FROM turnos tt
    INNER JOIN turnoscurso tc ON tc.idturn = tt.idturn 
    WHERE tt.idturn < :idturn AND tc.idcurs = :idcurs
    AND (
      tt.destur LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY tt.idturn DESC
    FETCH NEXT :limit ROWS ONLY`);u=await simpleExecute(r,t);return u?{stat:u.rows.length,data:u.rows}:{stat:0,data:[]}},insertTurno=async u=>{u.IDTURN={dir:BIND_OUT,type:NUMBER};var t=await simpleExecute(insertTurnoSql,u);return t?(u.IDTURN=t.outBinds.IDTURN,{stat:1,data:u}):{stat:null,data:[]}},updateTurno=async u=>{return await simpleExecute(updateTurnoSql,u)?{stat:1,data:u}:{stat:null,data:[]}},removeTurno=async u=>{return await simpleExecute(removeTurnoSql,u)?{stat:1,data:u}:{stat:null,data:[]}},matricula=async u=>{let t=matriculaSql;u.IDCURS?t+="WHERE mc.idcurs = :idcurs":u.IDMATR&&(t+="WHERE mm.idmatr = :idmatr");u=await simpleExecute(t,u);return u?{stat:u.rows.length,data:u.rows}:{stat:0,data:[]}},matriculas=async u=>{var t={idcurs:u.idcurs,limit:u.limit,part:u.part};let r="";"next"===u.direction?(t.idmatr=u.cursor.next,r+=`SELECT 
    mm.idmatr, mm.desmat, mm.notmat, mm.stamat,
    TO_CHAR(mm.inimat, 'YYYY-MM-DD') "INIMAT",
    TO_CHAR(mm.finmat, 'YYYY-MM-DD') "FINMAT",
    TO_CHAR(mm.inimat, 'DD/MM/YYYY') "STRINI",
    TO_CHAR(mm.finmat, 'DD/MM/YYYY') "STRFIN"
    FROM matriculas mm
    INNER JOIN matriculascurso mc ON mc.idmatr = mm.idmatr
    WHERE mm.idmatr > :idmatr AND mc.idcurs = :idcurs
    AND (
      mm.desmat LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY mm.idmatr ASC
    FETCH NEXT :limit ROWS ONLY`):(t.idmatr=u.cursor.prev,r+=`SELECT 
    mm.idmatr, mm.desmat, mm.notmat, mm.stamat,
    TO_CHAR(mm.inimat, 'YYYY-MM-DD') "INIMAT",
    TO_CHAR(mm.finmat, 'YYYY-MM-DD') "FINMAT",
    TO_CHAR(mm.inimat, 'DD/MM/YYYY') "STRINI",
    TO_CHAR(mm.finmat, 'DD/MM/YYYY') "STRFIN"
    FROM matriculas mm
    INNER JOIN matriculascurso mc ON mc.idmatr = mm.idmatr
    WHERE mm.idmatr < :idmatr AND mc.idcurs = :idcurs
    AND (
      mm.desmat LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY mm.idmatr DESC
    FETCH NEXT :limit ROWS ONLY`);u=await simpleExecute(r,t);return u?{stat:u.rows.length,data:u.rows}:{stat:0,data:[]}},insertMatricula=async u=>{u.IDMATR={dir:BIND_OUT,type:NUMBER};var t=await simpleExecute(insertMatriculaSql,u);return t?(u.IDMATR=t.outBinds.IDMATR,{stat:1,data:u}):{stat:null,data:[]}},updateMatricula=async u=>{return await simpleExecute(updateMatriculaSql,u)?{stat:1,data:u}:{stat:null,data:[]}},removeMatricula=async u=>{return await simpleExecute(removeMatriculaSql,u)?{stat:1,data:u}:{stat:null,data:[]}},usuarios=async u=>{let t="";var r={idcurs:u.idcurs,limit:u.limit,part:u.part},u=(t="next"===u.direction?(r.nomusu=""===u.cursor.next?null:u.cursor.next,`SELECT 
    uu.idusua,uu.userid,uu.nomusu,oo.desofi
    FROM usuarios uu
    INNER JOIN oficinas oo ON oo.idofic = uu.ofiusu
    INNER JOIN usuarioscurso uc ON uc.idusua= uu.idusua
    WHERE uu.nomusu > :nomusu  OR :nomusu IS NULL 
    AND uc.idcurs = :idcurs
    AND (
      uu.nomusu LIKE '%' || :part || '%' 
      OR oo.desofi LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY uu.nomusu ASC
    FETCH NEXT :limit ROWS ONLY`):(r.nomusu=""===u.cursor.prev?null:u.cursor.prev,`SELECT 
    uu.idusua,uu.userid,uu.nomusu,oo.desofi
    FROM usuarios uu
    INNER JOIN oficinas oo ON oo.idofic = uu.ofiusu
    INNER JOIN usuarioscurso uc ON uc.idusua= uu.idusua
    WHERE uu.nomusu < CONVERT(:nomusu, 'US7ASCII') OR :nomusu IS NULL 
    AND uc.idcurs = :idcurs
    AND (
      uu.nomusu LIKE '%' || :part || '%'
      OR oo.desofi LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY uu.nomusu DESC
    FETCH NEXT :limit ROWS ONLY`),await simpleExecute(t,r));return u?{stat:u.rows.length,data:u.rows}:{stat:0,data:[]}},usuariosPendientes=async u=>{let t="";var r={idcurs:u.idcurs,limit:u.limit,part:u.part},u=(t="next"===u.direction?(r.nomusu=""===u.cursor.next?null:u.cursor.next,`WITH datos AS (
    SELECT uu.idusua,uu.nomusu,oo.idofic,oo.desofi
    FROM usuariosturno ut
    INNER JOIN turnoscurso tc ON tc.idturn = ut.idturn AND tc.idcurs = :idcurs
    INNER JOIN usuarios uu ON uu.idusua = ut.idusua
    INNER JOIN oficinas oo ON oo.idofic = uu.ofiusu
    WHERE uu.idusua NOT IN (
      SELECT uc.idusua FROM usuarioscurso uc
      WHERE uc.idcurs = :idcurs
    )    
    AND (
      nomusu LIKE '%' || :part || '%' 
      OR desofi LIKE '%' || :part || '%'
      OR :part IS NULL
    ))
    SELECT * FROM datos
    WHERE nomusu > :nomusu OR :nomusu IS NULL
    ORDER BY nomusu ASC
    FETCH NEXT :limit ROWS ONLY`):(r.nomusu=""===u.cursor.prev?null:u.cursor.prev,`WITH datos AS (
    SELECT uu.idusua,uu.nomusu,oo.idofic,oo.desofi
    FROM usuariosturno ut
    INNER JOIN turnoscurso tc ON tc.idturn = ut.idturn AND tc.idcurs = :idcurs
    INNER JOIN usuarios uu ON uu.idusua = ut.idusua
    INNER JOIN oficinas oo ON oo.idofic = uu.ofiusu
    WHERE uu.idusua NOT IN (
      SELECT uc.idusua FROM usuarioscurso uc
      WHERE uc.idcurs = :idcurs
    )    
    AND (
      nomusu LIKE '%' || :part || '%' 
      OR desofi LIKE '%' || :part || '%'
      OR :part IS NULL
    ))
    SELECT * FROM datos
    WHERE nomusu < :nomusu OR :nomusu IS NULL
    ORDER BY nomusu DESC
    FETCH NEXT :limit ROWS ONLY`),await simpleExecute(t,r));return u?{stat:u.rows.length,data:u.rows}:{stat:0,data:[]}},insertUsuario=async u=>{return await simpleExecute(insertUsuarioSql,u)?{stat:1,data:u}:{stat:null,data:[]}},removeUsuario=async u=>{return await simpleExecute(removeUsuarioSql,u)?{stat:1,data:u}:{stat:null,data:[]}},usuariosTurno=async u=>{let t="";var r={idturn:u.idturn,limit:u.limit,part:u.part},u=(t="next"===u.direction?(r.nomusu=""===u.cursor.next?null:u.cursor.next,`SELECT 
    uu.idusua,uu.userid,uu.nomusu,oo.desofi
    FROM usuarios uu
    INNER JOIN oficinas oo ON oo.idofic = uu.ofiusu
    INNER JOIN usuariosturno ut ON ut.idusua= uu.idusua AND ut.idturn = :idturn
    WHERE uu.nomusu > :nomusu OR :nomusu IS NULL 
    AND (
      uu.nomusu LIKE '%' || :part || '%' 
      OR oo.desofi LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY uu.nomusu ASC
    FETCH NEXT :limit ROWS ONLY`):(r.nomusu=""===u.cursor.prev?null:u.cursor.prev,`SELECT 
    uu.idusua,uu.userid,uu.nomusu,oo.desofi
    FROM usuarios uu
    INNER JOIN oficinas oo ON oo.idofic = uu.ofiusu
    INNER JOIN usuariosturno ut ON ut.idusua= uu.idusua AND ut.idturn = :idturn
    WHERE uu.nomusu < :nomusu OR :nomusu IS NULL 
    AND (
      uu.nomusu LIKE '%' || :part || '%' 
      OR oo.desofi LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY uu.nomusu DESC
    FETCH NEXT :limit ROWS ONLY`),await simpleExecute(t,r));return u?{stat:u.rows.length,data:u.rows}:{stat:0,data:[]}},usuariosTurnoPendientes=async u=>{let t="";var r={idcurs:u.idcurs,idturn:u.idturn,limit:u.limit,part:u.part},u=(t="next"===u.direction?(r.nomusu=""===u.cursor.next?null:u.cursor.next,`WITH datos AS (
    SELECT uu.idusua,uu.nomusu,oo.idofic,oo.desofi
    FROM usuarios uu
    INNER JOIN oficinas oo ON oo.idofic = uu.ofiusu
    INNER JOIN matriculascurso mc ON mc.idcurs = :idcurs
    INNER JOIN usuariosmatricula um ON um.idusua = uu.idusua AND um.idmatr = mc.idmatr
    WHERE uu.idusua NOT IN (
      SELECT ut.idusua FROM usuariosturno ut
      WHERE ut.idturn = :idturn
    )
    AND (        
      nomusu LIKE '%' || :part || '%' 
      OR desofi LIKE '%' || :part || '%'
      OR :part IS NULL
    ))
    SELECT * FROM datos
    WHERE nomusu > :nomusu OR :nomusu IS NULL
    ORDER BY nomusu ASC
    FETCH NEXT :limit ROWS ONLY`):(r.nomusu=""===u.cursor.prev?null:u.cursor.prev,`WITH datos AS (
      SELECT uu.idusua,uu.nomusu,oo.idofic,oo.desofi
      FROM usuarios uu
      INNER JOIN oficinas oo ON oo.idofic = uu.ofiusu
      INNER JOIN matriculascurso mc ON mc.idcurs = :idcurs
      INNER JOIN usuariosmatricula um ON um.idusua = uu.idusua AND um.idmatr = mc.idmatr
      WHERE uu.idusua NOT IN (
        SELECT ut.idusua FROM usuariosturno ut
        WHERE ut.idturn = :idturn
      )
      AND (        
        nomusu LIKE '%' || :part || '%' 
        OR desofi LIKE '%' || :part || '%'
        OR :part IS NULL
      ))
      SELECT * FROM datos
      WHERE nomusu < :nomusu OR :nomusu IS NULL
      ORDER BY nomusu DESC
      FETCH NEXT :limit ROWS ONLY`),await simpleExecute(t,r));return u?{stat:u.rows.length,data:u.rows}:{stat:0,data:[]}},insertUsuarioTurno=async u=>{return await simpleExecute(insertUsuarioTurnoSql,u)?{stat:1,data:u}:{stat:null,data:[]}},removeUsuarioTurno=async u=>{return await simpleExecute(removeUsuarioTurnoSql,u)?{stat:1,data:u}:{stat:null,data:[]}},usuariosMatricula=async u=>{var t={idmatr:u.idmatr,limit:u.limit,part:u.part};let r="";"next"===u.direction?(t.nomusu=""===u.cursor.next?null:u.cursor.next,r+=`SELECT 
    uu.idusua,uu.userid,uu.nomusu,oo.desofi
    FROM usuarios uu
    INNER JOIN oficinas oo ON oo.idofic = uu.ofiusu
    INNER JOIN usuariosmatricula um ON um.idusua= uu.idusua AND um.idmatr = :idmatr
    WHERE uu.nomusu > :nomusu OR :nomusu IS NULL 
    AND (
      uu.nomusu LIKE '%' || :part || '%' 
      OR oo.desofi LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY uu.nomusu ASC
    FETCH NEXT :limit ROWS ONLY`):(t.nomusu=""===u.cursor.prev?null:u.cursor.prev,r+=`SELECT uu.idusua,uu.nomusu,uu.userid,oo.desofi
    FROM usuarios uu
    INNER JOIN oficinas oo ON oo.idofic = uu.ofiusu
    INNER JOIN usuariosmatricula um ON um.idusua= uu.idusua AND um.idmatr = :idmatr
    WHERE uu.nomusu < :nomusu OR :nomusu IS NULL 
    AND (
      uu.nomusu LIKE '%' || :part || '%'
      OR oo.desofi LIKE '%' || :part || '%'
      OR :part IS NULL
    )
    ORDER BY uu.nomusu DESC
    FETCH NEXT :limit ROWS ONLY`);u=await simpleExecute(r,t);return u?{stat:u.rows.length,data:u.rows}:{stat:0,data:[]}},insertUsuarioMatricula=async u=>{return await simpleExecute(insertUsuarioMatriculaSql,u)?{stat:1,data:u}:{stat:null,data:[]}},removeUsuarioMatricula=async u=>{return await simpleExecute(removeUsuarioMatriculaSql,u)?{stat:1,data:u}:{stat:null,data:[]}};export{find,findAll,insert,update,remove,turno,turnos,insertTurno,updateTurno,removeTurno,matricula,matriculas,insertMatricula,updateMatricula,removeMatricula,usuarios,usuariosPendientes,insertUsuario,removeUsuario,usuariosTurno,usuariosTurnoPendientes,insertUsuarioTurno,removeUsuarioTurno,usuariosMatricula,insertUsuarioMatricula,removeUsuarioMatricula};